{"version":3,"sources":["webpack:///webpack/bootstrap 7f29b34bddc3577898f3","webpack:///./js/sandbox.js","webpack:///./js/counter.js","webpack:///./js/calculator.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AChEmB;AACF;;AAEjB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;;AAEA,wBAAwB,SAAS,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC,IAAI;;AAEL;AACA,mBAAmB;AACnB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,cAAc,eAAe;AAC7B,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG,wBAAwB;AAC3B,GAAG,4BAA4B;AAC/B,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;;AAEA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG,4BAA4B;AAC/B,GAAG,+BAA+B;AAClC,GAAG;AACH;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,QAAQ;AACR;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gCAAgC;AAChC;AACA;AACA,gCAAgC;AAChC;AACA,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B;AAC3B,2BAA2B;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,iBAAiB,OAAO;;AAExB,oBAAoB;AACpB,gCAAgC;AAChC;AACA;;AAEA,0BAA0B;AAC1B;AACA;;AAEA,gBAAgB;AAChB,iBAAiB,OAAO;AACxB,6CAA6C;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG,kDAAkD;AACrD,GAAG,8CAA8C;AACjD,GAAG,8CAA8C;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB,EAAE,IAAI;AAC9C;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,IAAI;AACJ;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,oBAAoB,cAAc;AAClC,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,kBAAkB;;AAEzC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA,MAAM;AACN;AACA;AACA;AACA,sBAAsB;AACtB;AACA,QAAQ;AACR;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;;;AAGA,iCAAiC,OAAO;AACxC,gBAAgB,OAAO;;AAEvB;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,eAAe,GAAG,cAAc;AAClD,IAAI;AACJ,YAAY;AACZ,YAAY;AACZ,YAAY;;AAEZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,SAAS;AACT,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,eAAe;AACf,WAAW,2BAA2B,GAAG,4BAA4B;AACrE;AACA,aAAa,4BAA4B,GAAG,4BAA4B;AACxE,iBAAiB,2BAA2B;AAC5C;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC,0EAA0E;AAC1E,GAAG,OAAO;AACV;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;AC/lDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AAAA;AAAA","file":"sandboxEntry.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7f29b34bddc3577898f3","import {Calculator} from './calculator';\nimport {CounterC} from './counter';\n\n//------------------------------------------------------------------------------------------------\n//DEFAULT PARAMS CANNOT ACCESS INNER BODY\nconst x = 'outer';\nfunction foo(a = x) {\n    const x = 'inner';\n    console.log(a); // outer\n}\n\nfoo();\n\nfunction bar(x=y, y=4) { return {x,y}; }\n//console.log(bar())\n//------------------------------------------------------------------------------------------------\n//Counter function\n//Counter is class instance\nclass Countdown {\n  constructor(counter, action){\n    this._counter = counter;\n    this._action = action;\n  }\n  dec() {\n    //ebugger;\n    if(this._counter < 1 ) return;\n    this._counter --;\n    if(this._counter === 0) {\n      this._action();\n    }\n  }\n  get counter() {\n    return this._counter;\n  }\n}\n\nconst c = new Countdown(3, () => console.log('DONE'))\nc.dec();\nconsole.log('C++++++', c.counter)\n\nconst d = new Countdown(2, () => console.log('DONE ALSO'))\nd.dec();\nconsole.log('D+++++', d.counter)\n\n// TODO: Need to check\n//Default params callback as default\n// const QUX = 2;\n// function baz(callback = () => QUX) { // returns 2\n//     const QUX = 3;\n//     callback();\n// }\n// baz( () => console.log('DDDD') ); // ReferenceError\n// console.log('ss', baz())\n//------------------------------------------------------------------------------------------------\n//ITERATOR\nconst obj = {\n    * [Symbol.iterator]() {\n        yield 'a';\n        yield 'b';\n        yield 'c';\n    }\n};\nconst arr = [...obj];\nconsole.log(arr)\n//------------------------------------------------------------------------------------------------\n//FUNCTIONS\n//function declaration\nfunction foo(x){\n\n}\n//functon expression\nconst fooE = function(x){\n\n}\n//------------------------------------------------------------------------------------------------\n//GENERATOR function\n//declaration\nfunction* foo1(x){\n\n}\n//expressesion\nconst foo2 = function* (x){\n\n}\n//GENERATOR METHOD DEFINITIONS\n//object\nconst objd = {\n  * add(){\n\n  }\n}\n//class\nclass objc {\n  * add(){\n\n  }\n}\n//------------------------------------------------------------------------------------------------\n//CLASSES\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n}\nPoint.ZERO = new Point(0, 0);\nconst p = new Point(1, 2)\nconsole.log(p)\nconsole.log(Point.ZERO)\n//------------------------------------------------------------------------------------------------\n// GENRATOR METHODS\nclass IterableMethod {\n  constructor(...args){\n    this.args = args\n  }\n  * [Symbol.iterator]() {\n    for(const arg of this.args){\n      yield arg\n    }\n  }\n}\nfor( const x of new IterableMethod('hello', 'world')){\n  console.log(x)\n}\n//------------------------------------------------------------------------------------------------\n//ARRAY FROM\nconst spans = document.querySelectorAll('span.test');\nconsole.log(typeof spans)\nconst names = Array.prototype.map.call(spans, s => s.textContent);\nconsole.log('Text inside test', names)\nconst names2 = Array.from(spans, s => s.textContent);\nconsole.log('Array from', names2)\n//------------------------------------------------------------------------------------------------\n//Array Subclassing\nclass MyArray extends Array{\n\n}\nconst myArrayInstance = MyArray.from([1,2,3], x => x * x)\nconsole.log(myArrayInstance instanceof MyArray)\n\nconst reverse = function (arr){\n    let newArr = []\n    while(arr.length > 0){\n      newArr.push(arr.pop())\n    }\n    return newArr\n  }\n\nconsole.log(reverse(['a', 'b', 'c']))\n//------------------------------------------------------------------------------------------------\nfunction add(x, y){\n  return this.a + this.b + x + y;\n}\nvar o = {a: 1, b: 3};\nconsole.log(add.apply(o, [2,4]))\nconsole.log(add.call(o, 2,3))\n//------------------------------------------------------------------------------------------------\nlet words = 'anu is a good girl'\nconsole.log(words.split(' ').reverse().join(' '))\n\nclass Counter{\n  static increment(n){\n    if (n === undefined){\n      n = 1\n    }\n    return ++n;\n  }\n}\n\nconsole.log('Counter' + Counter.increment());\nconsole.log('Counter' + Counter.increment(3));\n\nclass Count{\n  constructor(){\n    this._id = Count.counter;\n    // console.log('STEP 1', this._id);\n\n  }\n  get id(){\n    // console.log('STEP 2');\n    return this._id\n  }\n  static get counter(){\n    // console.log('STEP 3')\n    Count._counter = (Count._counter || 0) + 1;\n    return Count._counter;\n  }\n  resetCounter(){\n    Count._counter = 0;\n  }\n}\nlet a = new Count();\nconsole.log('Counter Static', a.id)\nlet b = new Count();\nconsole.log('Counter Static', b.id)\nlet cd = new Count();\nconsole.log('Counter Static', cd.id)\ncd.resetCounter();\nconsole.log(new Count());\nconsole.log(cd.id);\n//------------------------------------------------------------------------------------------------\n\n//Simple Array Sum\n[1, 2, 3, 4, 5].reduce((a, b) => a + b, 0)\n// Compare the Triplets\nlet arr1 = [5, 6, 7]\nlet arr2 = [10, 6, 10]\nlet result =  []\nfor(const [index, element] of arr1.entries()){\n  result[index] = arr1[index] > arr2[index] ? 1 : arr2[index] > arr1[index] ? 1 : undefined\n}\nconsole.log(result)\n\n//array flatten\nvar flattened = [[0, 1], [2, 3], [4, 5]].reduce(function(a, b) {\n  return a.concat(b);\n}, []);\n\n//count instance of values\nvar namesn = ['Alice', 'Bob', 'Tiff', 'Bruce', 'Alice'];\nlet countednames = namesn.reduce( (acc, curr) => {\n  if(curr in acc){\n    acc[curr]++;\n  } else {\n    acc[curr] = 1\n  }\n  return acc;\n}, {});\n\n//String reduce\nconst str = 'baab'; let newStr = '';\nconst countedNames = str.split('').reduce( (acc, curr) => {\n  if(curr in acc){\n    acc[curr]++;\n  } else {\n    acc[curr] = 1\n  }\n  return acc;\n}, {});\nfor( let key in countedNames){\n   newStr += (countedNames[key] % 2 === 0) ? '' : key\n}\nconsole.log(newStr)\n\n// if(!String.prototype.removeDupl){\n//   String.prototype.removeDupl = function(){\n//\n//   }\n// }\n//count camelCase\nconst st = 'saveChangesInTheEditor'\nfunction countUpperCaseChars(str) {\n  var count=0,len=str.length;\n  for(var i=0;i<len;i++) {\n    if(/[A-Z]/.test(str.charAt(i))) count++;\n  }\n  return count;\n}\nfunction splitByUpperCase(str) {\n  var count=0,len=str.length, init=0, rest=[], tot = [];\n  for(var i=0;i<len;i++) {\n    if(/[A-Z]/.test(str.charAt(i))){\n      rest.push([init, i])\n      init = i;\n    }\n  }\n  rest.push([init, i])\n  console.log(rest)\n  rest.map( (item) => {\n    tot.push(str.slice(item[0], item[1]))\n    return tot\n  })\n  return tot;\n}\n//find sum of two numbers is in Array\nconst elnums = [2, 7, 11, 15, 3, 6]\n\nfunction findSum(...args){\n  const [target, nums] = args;\n  let sumMap = new Map();\n  let retResult = [];\n  for (let i=0; i < nums.length; i++ ){\n    const complement = target - nums[i]\n    if(sumMap.has(complement)){\n      retResult.push([sumMap.get(complement), i])\n    } else {\n      sumMap.set(nums[i], i)\n    }\n  }\n  return retResult\n}\nconsole.log(findSum(9, elnums))\n//find vowels\nconst vowelMap = new Map([['a', 1], ['e', 1], ['o', 1], ['i', 1], ['u', 1]])\nconst input = 'nBBZLsnm'\nlet countVowel = 0\ninput.split('').forEach(item => {\n  if(vowelMap.has(item)){\n    countVowel++\n  } else {\n     countVowel =  'No vowels inside String'\n  }\n})\nconsole.log('countVowel', countVowel)\n//find min and max sum of (n-1) integers given N\nconst intAr = [1, 2, 3, 4, 5]\nlet sumAr = 0, finalAr = [], sum = 0\nwhile(sumAr <= intAr.length-1){\n  sum = 0;\n  for(let i=0; i<=intAr.length-1 ; i++){\n    console.log('Excluding', i)\n    if(sumAr != i){\n      sum = sum + intAr[i];\n      console.log(sum)\n    }\n  }\n  finalAr.push(sum)\n  sumAr++;\n}\nconsole.log(finalAr)\nconst sortArr = finalAr.sort((a,b) => {\n  return a - b\n})\nconsole.log(sortArr)\nconsole.log(sortArr[0], sortArr[sortArr.length - 1])\n\n//bubble sort\nconst bubbleSort = (narr) => {\n  let swapbc = 0\n  for(let i=0; i<narr.length; i++){\n    for(let j=0; j<narr.length - i - 1; j++){\n      if(narr[j+1] < narr[j]){\n        [narr[j+1], narr[j]] = [narr[j], narr[j+1]]\n        console.log(narr)\n        swapbc++\n      }\n    }\n  }\n  console.log('Swapped count', narr)\n}\nbubbleSort([1,4,3,2,5])\n\n//order by fan and lexicography\n\nconst db = [\n  {name: 'surbhi', fanq: 3},\n  {name: 'surpanakha', fanq: 3},\n  {name: 'shreya', fanq: 5}\n]\nlet fqns = db.sort((a,b) => {\n  if(b.fanq < a.fanq){\n    return -1;\n  } else if (b.fanq > a.fanq){\n    return 1\n  } else {\n    if(a.name < b.name){\n      return -1\n    } else if (a.name > b.name){\n      return 1\n    } else {\n      return 0\n    }\n  }\n})\nconsole.log('fqns', fqns)\n//linkedlist\n\nfunction Node(data) {\n  this.data = data\n  this.next = null\n}\n\nclass SinglyLinkedList {\n  constructor(){\n    this.head = null\n    this.tail = null\n    this.numberOfvalues = 0\n  }\n  add(data){\n    const node = new Node(data)\n    if(!this.head){\n      this.head = node\n      this.tail = node\n    } else {\n      this.tail.next = node\n      this.tail = node\n    }\n    this.numberOfvalues++;\n  }\n  remove(data){\n    let current = this.head\n    let previous = this.head\n    while(current){\n      if(current.data === data){\n        if(current === this.head){\n          this.head = this.head.next\n        }\n        if(current === this.tail){\n          this.tail = previous\n        }\n        previous.next = current.next\n        this.numberOfValues--;\n      } else {\n        previous = current\n      }\n      current = current.next\n    }\n  }\n  print(){\n    let llstr = ''\n    let current = this.head\n    while(current){\n      llstr += `${current.data}`\n      current = current.next\n    }\n    console.log(llstr.trim())\n  }\n}\nconst singlyLinkedList = new SinglyLinkedList();\nsinglyLinkedList.add(1);\nsinglyLinkedList.add(2);\nsinglyLinkedList.add(3);\nsinglyLinkedList.add(4);\nsinglyLinkedList.print()\nsinglyLinkedList.remove(4);\nsinglyLinkedList.print()\n\n//Monk and new array\n\nvar items = [\n  [10, 2],\n  [6, 8],\n  [4, 1]\n];\n\nlet sorted2DArray = items.map( arritem => {\n  return arritem.sort( (a, b) => {\n    return a - b\n  })\n})\n// [2, 10] [6, 8] => [2,1\nconsole.log('Sorted 2DArray', sorted2DArray)\n\n//shift each char by position\n\nfunction shiftChars(str, position){\n  let splitStr = str.split('')\n  for(let i=0; i<position; i++){\n    splitStr.unshift(splitStr.pop())\n  }\n  return splitStr.join(',')\n}\n\nconsole.log(shiftChars('hacker', 3))\n\n//sort substrings in descending order\nconst subs = [\n  {str: 'hlleo', index: [1, 3]},\n  {str: 'ooneefspd', index: [0,8]},\n  {str: 'effort', index: [1, 4]}\n]\n\nlet sortedStr = subs.map( item => {\n   return item['str'].split('').splice(item['index'][0], item['index'][1]+1, '@').sort().reverse().join('')\n})\nconsole.log(sortedStr)\nconsole.log(subs)\n\n//find substrings in string\n// sda\n// sadasda\n\nfunction getSubstringCount(str, substr, casesensitive){\n  const searchStrLength = substr.length\n  let substrArr = []\n  let substrCount = 0\n  if( searchStrLength === 0){\n    return 0\n  }\n  if(!casesensitive){\n    str = str.toLowerCase()\n    substr = substr.toLowerCase()\n  }\n  let startIndex = 0\n  let index\n  while(~(index = str.indexOf(substr, startIndex))){\n    substrArr.push(index)\n    substrCount++\n    startIndex = index + searchStrLength\n  }\n  return substrCount\n}\nconsole.log('Substrung Array', getSubstringCount('sadasda', 'sda', false))\n\n//function palindromw\nfunction palindrome(str){\n  let result = 'NO'\n  if(str === str.split('').reverse().join('')){\n    result = 'YES'\n  }\n  return result\n}\nconsole.log(palindrome('abba'))\nconsole.log(palindrome('aaaa'))\nconsole.log(palindrome('abcd'))\n\n//find popular hash tags\nlet sampleTweets = [\n  'Donald Trump becomes the 45th #US President',\n  'Potentially habitable exoplanet #ProximaB discovered',\n  '#RogerFederer wins #US Open for 5th time',\n  '#GravitationalWaves detection successful',\n  'Traces of liquid water discovered on #Mars',\n  'Life Could Survive on Exoplanet #ProximaB',\n  'Go go #RogerFederer',\n  'Ten ways #ProximaB is different from Earth',\n  'ISRO becomes 4th space agency to reach #Mars',\n  '#RogerFederer beats #Nadal'\n]\nlet reg = /^#\\b]/\nfunction findPopularhashTags(tweets){\n  let hashTweetmaps = new Map(), hashMaps, counts = [];\n  tweets.forEach( tweet => {\n    let strings = tweet.split(' ')\n    strings.forEach( str => {\n      let hashTag = str.match(/^#\\w+/)\n      if(hashTag){\n        hashTag = hashTag[0]\n        if(hashTweetmaps.has(hashTag)){\n          let count = hashTweetmaps.get(hashTag)\n          count++\n          hashTweetmaps.set(hashTag, count)\n        } else {\n          hashTweetmaps.set(hashTag, 1)\n        }\n      }\n    })\n  })\n  console.log(Array.from(hashTweetmaps.entries()))\n  // debugger;\n  //\n  // tweets.map( tweet => {\n  //   let strings = tweet.split(' ')\n  //   strings.map( str => {\n  //     let hashTag = str.match(/^#\\w+/)\n  //     return counts\n  //     // if(hashTag && hashTweetmaps.has(hashTag)){\n  //     //   hashTweetmaps.get(hashTag)++\n  //     // } else if(hashTag){\n  //     //   hashTweetmaps.set(hashTag, 1)\n  //     // } else {\n  //     //   //Do nothing\n  //     // }\n  //     // if(hashTweetmaps.has(hashTag)){\n  //     //   hashTweetmaps.get(hashTag)++\n  //     // } else if(hashTag){\n  //     //   hashTweetmaps.set( hashTag, 1)\n  //     // }\n  //   })\n  //   return counts;\n  // })\n  // counts = Array.from(hashTweetmaps.values()).sort((a, b) => {\n  //   return a -b\n  // })\n}\n\nconsole.log(findPopularhashTags(sampleTweets))\n//find keys pressed\nwindow.addEventListener(\"keypress\", function(event) {\n    console.log(String.fromCharCode(event.charCode));\n  });\n\n  //Counter\n//   var counter = (function() {\n//   var privateCounter = 0;\n//   function changeBy(val) {\n//     privateCounter += val;\n//   }\n//   return {\n//     increment: function() {\n//       changeBy(1);\n//     },\n//     decrement: function() {\n//       changeBy(-1);\n//     },\n//     value: function() {\n//       return privateCounter;\n//     }\n//   };\n// })();\n//\n// console.log(counter.value()); // logs 0\n// counter.increment();\n// counter.increment();\n// console.log(counter.value()); // logs 2\n// counter.decrement();\n// console.log(counter.value()); // logs 1\n\n// var makeCounter = function() {\n//   var privateCounter = 0;\n//   function changeBy(val) {\n//     privateCounter += val;\n//   }\n//   return {\n//     increment: function() {\n//       changeBy(1);\n//     },\n//     decrement: function() {\n//       changeBy(-1);\n//     },\n//     value: function() {\n//       return privateCounter;\n//     }\n//   }\n// };\n//\n// var counter1 = makeCounter();\n// var counter2 = makeCounter();\n// alert(counter1.value()); /* Alerts 0 */\n// counter1.increment();\n// counter1.increment();\n// alert(counter1.value()); /* Alerts 2 */\n// counter1.decrement();\n// alert(counter1.value()); /* Alerts 1 */\n// alert(counter2.value()); /* Alerts 0 */\n\n// the call() function. This function basically allows you to call a function defined somewhere else, but in the current context\n\nfunction factorial(n){\n  let fact = n\n  while (n > 1){\n    fact = fact*(n-1)\n    n--\n  }\n  return fact\n}\nconsole.log('Factorial', factorial(4))\n\n// const factorial = n => n ?  (n * factorial(n-1)) : 1;\n//=======================================================\nvar data = [0, 1, 2];\nvar funcs = [];\n\nfunction init() { // 0\n  for (var i = 0; i < 3; i++) {\n\n    var x = data[i]; // 1\n    var innerFunc = function() { // 2\n      return x;\n    };\n\n    funcs.push(innerFunc); // 3\n  }\n}\n\nfunction run() { // 4\n  for (var i = 0; i < 3; i++) {\n    console.log(data[i] + \", \" + funcs[i]()); // 5\n  }\n}\n\ninit();\nrun();\n\n//\nclass EventEmitter{\n  constructor(){\n    this.eventTable = new Map()\n    return this;\n  }\n  register(eventname, callback){\n    let cbArray = []\n    if(this.eventTable.has(eventname)){\n      cbArray = this.eventTable.get(eventname)\n    }\n    cbArray.push(callback)\n    this.eventTable.set(eventname, cbArray)\n  }\n  broadcast(eventname){\n    if(this.eventTable.has(eventname)){\n      this.eventTable.get(eventname).forEach( cb => {\n        cb()\n      })\n    } else {\n      console.log('Event not found')\n    }\n  }\n}\n\nconst e = new EventEmitter();\ne.register('hungry', () => console.log('I am hungry'))\ne.register('hungry', () => console.log('I am hungry once again'))\ne.register('foo', () => console.log('I am foo'))\ne.register('foo', () => console.log('I am foo again'))\ne.register('foo', () => console.log('I am foo 3rd time again'))\ne.register('Baz', () => console.log('I am baz only once'))\ne.broadcast('foo')\ne.broadcast('hungry')\ne.broadcast('Baz')\ne.broadcast('hello')\n\n//find unique\nconst dups = [1, 2, 3, 4, 5, 4, 2]\nconst unique = new Set(dups)\nconsole.log(unique)\n\n\n//teacher-student\nconst teachers = ['vasya', 'petya', 'kolya']\nconst teacherRecord = [\n  {'name': 'vasya', 'student': 'errichto', 'age': 21},\n  {'name': 'kolya', 'student': 'petr', 'age': 22},\n  {'name': 'petya', 'student': 'egor', 'age': 19},\n  {'name': 'vasya', 'student': 'tourist', 'age': 19}\n]\n/*\n * 'vasya': [\n *  'student' : aa,\n *  'age' : 12\n * ]\n * }\n *\n */\n\n//  let keys = Array.from(hashTable.keys())\n//\n//         let values = Array.from(hashTable.values()) [1,1,1,..]\n//         duplicateChars = values.filter( item => {\n//             return item > 1\n//         }) //[ a, b, c]\n// let sortedTeacherRecord = []\n// let dummy = []\n// teacherRecord.forEach( record => {\n//  let obj = {\n//     'student': record.student,\n//     'age': record.age\n//   }\n//   if(!sortedTeacherRecord[record.name]){\n//     sortedTeacherRecord[record.name] = []\n//     sortedTeacherRecord[record.name].push(obj)\n//   } else {\n//     sortedTeacherRecord[record.name].push(obj)\n//   }\n// })\n// console.log('sortedTeacherRecord', sortedTeacherRecord)\n\n0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0\nconst cc = [\n  [\n    [4, 5],\n    [6, 10],\n    [12, 14]\n  ],\n  [\n    [4, 5],\n    [5, 9],\n    [13, 16]\n  ],\n  [\n    [11, 14]\n  ]\n]\n\nfunction findSlots(schedule) {\n  const shared = []\n  const day = []\n  for (let i=0;i<23;i++){\n    day[i] = 0;\n  }\n\n  // add all times from all people\n  // to show potential scheduling times\n  // use count to show most shared time\n  let count = 0\n\n  for (const person of schedule) {\n    for (const slot of person){\n      count++\n      const dif = slot[1] - slot[0]\n      day.fill(count, slot[0], (slot[0] + dif))\n    }\n  }\n\n  const arrMax = Math.max(...day)\n\n  for (const [i, slot] of day.entries()){\n    if (slot == arrMax) {\n      let str = (i < 12) ? 'pm' : 'am'\n      let hour = (i > 12) ? (i - 12) : i\n      shared.push(`${i == 0 ? 12 : hour}${str}`)\n    }\n  }\n\n  return shared\n}\n\n\n// arr.map( item => {\n//   return item.values\n// }).sort((a, b) => {\n//   return a - b\n// })\n\n// function findMedian(arr){\n//   let median = Math.floor(arr.length / 2)\n//   if(arr.length % 2){\n//     return\n//\n//   }\n//   arr.length / 2\n// }\n// var findMedianSortedArrays = function(nums1, nums2) {\n//     const sortedArr1 = arrSort(nums1)\n//     const sortedArr2 = arrSort(nums2)\n//     console.log('Array 1', sortedArr1)\n//     console.log('Array 2', sortedArr2)\n// };\n//\n// findMedianSortedArrays([1, 12, 15, 26, 38], [2, 13, 17, 30, 45])\n\n\nconst dict = {\n    '2': ['a', 'b', 'c'],\n    '3': ['d', 'e', 'f'],\n    '4': ['g', 'h', 'i'],\n    '5': ['j', 'k', 'l'],\n    '6': ['m', 'n', 'o'],\n    '7': ['p', 'q', 'r', 's'],\n    '8': ['t', 'u', 'v'],\n    '9': ['w', 'x', 'y', 'z']\n}\nvar letterCombinations = function(digits) {\n    let words = []\n    return digits.split('').map( number => {\n        return dict[number]\n    }).reduce(function (a, b){\n        for(let i=0; i < a.length; i++){\n            for(let j=0; j < b.length; j++){\n                words.push(a[i]+b[j])\n            }\n        }\n        return words\n    })\n};\nletterCombinations(\"23\")\n\nvar majorityElement = function(nums) {\n    const majority = Math.floor(nums.length/2)\n    const hashMap = new Map()\n    nums.forEach( number => {\n        if(hashMap.has(number)){\n            let count = hashMap.get(number)\n            count += 1\n            hashMap.set(number, count)\n        } else {\n            hashMap.set(number, 1)\n        }\n    })\n    for(let [key, value] of hashMap.entries()){\n      if(value > majority){\n        return key\n      }\n    }\n};\nmajorityElement([1,2,3,2,2])\n//[7, 1, 5, 3, 6, 4]\nfunction findMaxProfit(arr){\n  let minValue = Number.MAX_VALUE, maxValue = 0\n  for(let i=0; i<arr.length; i++){\n    if(arr[i] < minValue){\n      minValue = arr[i]\n    } else if(arr[i] - minValue > maxValue){\n      maxValue = arr[i] - minValue\n    }\n  }\n  return maxValue\n}\nconsole.log(findMaxProfit([7, 1, 5, 3, 6, 4]))\n\nfunction removeElememt(nums, val) {\n    let vv = 0;\n     nums.forEach ( number => {\n         if(number === val){\n             vv++\n         }\n     })\n    return vv\n}\nconsole.log(removeElememt([3,2,2,3], 3))\n\n//product except self\nvar productExceptSelf = function(nums) {\n    let result = [], counter = 0\n    for(let j = 0; j < nums.length; j++){\n        counter = j\n        let value = 1\n        for (let i=0; i< nums.length; i++){\n            if( j !== i){\n                value = value * nums[i]\n            }\n        }\n        result.push(value)\n    }\n    return result\n}\n\nvar reverseWords = function(str) {\n        let words =  str.split(' '), newWords = ''\n        newWords = words.filter( word => {\n          if(word){\n            return word\n          }\n        }).reverse().join (' ')\n        return newWords\n}\nconsole.log(reverseWords(\"   a   b \"))\n\n//Viewport\n/*\nWindow.innerHeight = Height (in pixels) of the browser window viewport\nwindow.scrollY or window.pageYOffset = returns the number of pixels that the document is currently scrolled vertically\ndocument.body.offsetHeight = The HTMLElement.offsetHeight read-only property is the height of the element including vertical padding and borders\nTypically, an element's offsetHeight is a measurement in pixels of the element's CSS height, including border, padding and the element's horizontal scrollbar (if present, if rendered). It does not include the height of pseudo-elements such as :before or :after.\n\nFor the document body object, the measurement includes total linear content height instead of the element's CSS height\n*\n\nwindow.onscroll = function(ev) {\n    if ((window.innerHeight + window.pageYOffset) >= document.body.offsetHeight) {\n        alert(\"you're at the bottom of the page\");\n    }\n};\n\nIt can be achieved by using the window object's 'scroll' event. Here's the code:\n\nvar w = $(window), d = $(document);\nw.scroll(function() {\n   if(w.scrollTop() + w.height() == d.height())\n   {\n      console.log(\"You have hit the bottom!\");\n   }\n});\n\n\nThis piece basically calculates how much you have scrolled from the top, adds the window height and checks whether this total height corresponds to the height of the complete document. If both of them match, then you must have scrolled all the way to the last.\n*/\n\n//currying\n/*Curry: A function that takes a function with multiple parameters as input and returns a function with exactly one parameter.\nPartial Application: a function that takes a function with multiple parameters and returns a function with fewer parameters\nClosure: a closure gives you access to an outer function’s scope from an inner function.\nPure function :\n  Given the same input, will always return the same output.\n  Produces no side effects.\n  Relies on no external mutable state.\nFunction composition: is the process of combining two or more functions to produce a new function. Composing functions together is like snapping together a series of pipes for our data to flow through.\nFunctional code tends to be more concise, more predictable, and easier to test than imperative or object oriented code \nA higher order function is any function which takes a function as an argument, returns a function, or both.\n*/\nfunction add(a, b){\n  return function(b){\n    return a + b;\n  }\n}\nconst add3 = add(3)\nconsole.log('Add 3', add3(2))\n\nconst curryadd = (a, b) => ( (b) => a + b)\nconst cadd3 = curryadd(3)\nconsole.log('Curry Add 3', curryadd(3)(2))\n\nconst partialApply = (fn, ...fullargs) => {\n  return function(...remainingargs) {\n    return fn.apply(this, fullargs.concat(remainingargs))\n  }\n}\n\n//eg\n\nconst multiply = (a, b) => a * b\nconst multiply3 = partialApply(multiply, 3)\nconsole.log('Multiply3', multiply3(2))\nconsole.log('Multiply3', multiply3(3))\n\n//sleep function\n// function sleep(ms){\n//   let start = Date.now()\n//   while( (Date.now - start) < millisecons )\n// }\n\n//callback\nconst loadScript = (src, callback) => {\n  let script = document.createElement('script')\n  script.src = src\n  script.onload = () => {\n    callback(script)\n  }\n  document.head.append(script)\n}\nloadScript(\n  'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.2.0/lodash.js',\n  (script) => {\n    console.log(`Cool, the ${script.src} is loaded`)\n    console.log( _ )\n  }\n)\n//promised loadScript\nconst ploadScript = (src) => {\n  return new Promise((resolve, reject) => {\n    let script = document.createElement('script')\n    script.src = src\n    script.onload = () => resolve(script)\n    script.onerror = () => reject(new Error ('whoops!!!'))\n  })\n}\nploadScript(\n  'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.2.0/lodash.js',\n).then(\n  script => alert(`Cool, the ${script.src} is loaded`),\n  error => alert(`Error: ${error.message}`)\n)\n//delay in promised\nconst delay = (ms) => {\n  return new Promise(resolve => setTimeOut(resolve, ms))\n}\n//delay(3000).then(() => alert('runs after 3 seconds'));\n\n//Object methids\nvar protoCheck = {\n  a: 'Hello',\n  meth: function(){\n    console.log('object methods')\n  },\n  foo(){\n    console.log(this.a + 'Foo')\n  },\n  bar(){\n    console.log(this.a + 'Bar')\n  }\n}\nconsole.log(protoCheck)\n\nfunction testProto(){\n  this.foo = 'foo'\n  this.bar = 'bar'\n  this.baz = function(){\n    console.log('Baz method')\n  }\n}\n//constructor function is overridden in the below definition\ntestProto.prototype = {\n  hello: function(){\n    console.log('hello')\n  }\n}\n\n// testProto.prototype.hello = function(){\n//   console.log('hello')\n// }\nconst ab = new testProto()\n\ntestProto.prototype = {\n\n}\n\nclass Clock{\n  constructor(template){\n    this._template = template\n  }\n  _render(){\n    let date = new Date()\n    let hours = date.getHours()\n    let secs = date.getSeconds()\n    let mins = date.getMinutes()\n    let output = this._template\n                    .replace('h', hours)\n                    .replace('m', mins)\n                    .replace('s', secs)\n  }\n  start(){\n    this._render()\n    this._timer = setInterval(() => this._render, 1)\n  }\n}\n\nlet clock = new Clock({template: 'h:m:s'});\n\n// class Animal {}\n// class Rabbit extends Animal {}\n//\n// // for static propertites and methods\n// alert(Rabbit.__proto__ == Animal); // true\n//\n// // and the next step is Function.prototype\n// alert(Animal.__proto__ == Function.prototype); // true\n//\n// // that's in addition to the \"normal\" prototype chain for object methods\n// alert(Rabbit.prototype.__proto__ === Animal.prototype);\n\nlet lis = document.querySelectorAll('li')\nlet output = []\nfor(let li of lis){\n  let title = li.firstChild.data.trim()\n  let descNodesCount = li.getElementsByTagName('li').length\n  output.push({title, descNodesCount})\n}\nconsole.log('Final Output', output)\n\n// let divs = document.querySelector('.test--outer')\n// divs.outerHTML = '<p>Hello World</p>'\n// console.log(divs.outerHTML)\n\n// let data = {\n//   \"Fish\": {\n//     \"trout\": {},\n//     \"salmon\": {}\n//   },\n//\n//   \"Tree\": {\n//     \"Huge\": {\n//       \"sequoia\": {},\n//       \"oak\": {}\n//     },\n//     \"Flowering\": {\n//       \"redbud\": {},\n//       \"magnolia\": {}\n//     }\n//   }\n// };\n//\n// let container = document.createElement('div')\n// container.className = 'container'\n// let ul = document.createElement('ul')\n// for(let item of data){\n//   let li = document.createElement('li')\n//   let text = document.createTextNode(item)\n//   li.append(text)\n//   for(let inneritem of li){\n//\n//   }\n// }\n//memoize\nfunction memoize(func){\n  let cache = {}\n  return function(){\n    let key = JSON.stringify(arguments)\n    if(cache[key]){\n      return cache[key]\n    } else{\n      let val = func.apply(this, arguments)\n      cache[key] = val\n      return val\n    }\n  };\n}\nlet factorials = memoize(function(num){\n  console.log('Working for factorial' + num)\n  return num === 1 ? num : num * factorial(num-1)\n})\nconsole.log(factorials(3))\n\n//handleScroll\nfunction debounce(callback, wait, context = this) {\n let timeout = null\n let callbackArgs = null\n\n const later = () => callback.apply(context, callbackArgs)\n\n return function() {\n   callbackArgs = arguments\n   clearTimeout(timeout)\n   timeout = setTimeout(later, wait)\n }\n}\n\n/*function debounce(fn, delay) {\n  var timer = null;\n  return function () {\n    var context = this, args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      fn.apply(context, args);\n    }, delay);\n  };\n}*/\n\n// const handleScroll = debounce((e) => {\n//  console.log('Window scrolled.')\n// }, 1000)\n// window.addEventListener('scroll', handleScroll)\n\nfunction throttle(func, wait, context=this){\n  let timeout = null\n  let callbackArgs = null\n\n  const later = () => {\n    func.apply(context, callbackArgs)\n    timeout = null\n  }\n\n  return function(){\n    if(!timeout){\n      callbackArgs = arguments\n      timeout = setTimeout(later, wait)\n    }\n  }\n\n}\n\n// const handleKeydown = throttle((e) => {\n//   console.log(e.target.value)\n// }, 300)\n//input.addEventListener('keydown', handleKeydown)\n\n\nconst sampleInput = [[1, 2, 3], { a: 2 }, [4, 5, 'hello', [45, [67, 89, 78, [11, 22, 33]]]], [6, 7, 8, 9]]\n// > [1, 2, 3, { a: 2 }, 4, 5, \"hello\", 45, 67, 89, 78, 11, 22, 33, 6, 7, 8, 9]\n\nfunction recursiveFlatten(arr){\n  let op = []\n  function isType(obj, type = 'Object'){\n    return Object.prototype.toString.call(obj).indexOf(type) !== -1\n  }\n  for(let i=0; i < arr.length; i++){\n    if(isType(arr[i], 'Array')){\n      op = op.concat(recursiveFlatten(arr[i]))\n    } else {\n      op.push(arr[i])\n    }\n  }\n  return op\n}\nconsole.log('Sample output', recursiveFlatten(sampleInput))\n\n//count down\n// let countdownIterator = {\n//   countdown = 10,\n//   next(){\n//     return {\n//       done: this.countdown === 0,\n//       value: this.countdown\n//     }\n//   }\n// }\n// let countdownIterable = {\n//   [Symbol.iterator](){\n//     return Object.assign({}, countdownIterator)\n//   }\n// }\n// let iterator = countdownIterable[Symbol.iterator]()\n// iterator.next() //Object {done: false, value: 9}\n// iterator.next() //Object {done: false, value: 8}\n// let secondIterator = countdownIterable[Symbol.iterator]();\n// let thirdIterator = countdownIterable[Symbol.iterator]();\n//\n// console.log( secondIterator.next() );\n// // Object {done: false, value: 9}\n//\n// console.log( thirdIterator.next() );\n// // Object {done: false, value: 9}\n//\n// console.log( secondIterator.next() );\n// // Object {done: false, value: 8}\n\n// function staticcounter(){\n//   let count = 0\n//   static increment(){\n//     return ++count\n//   }\n//   static decrement(){\n//     return --count\n//   }\n// }\n\n// console.log(staticcounter.increment())\n// console.log(staticcounter.increment())\n// console.log(staticcounter.increment())\n// console.log(staticcounter.increment())\n\nconst romanNumerals = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1};\n\nfunction convertToRoman(num) {\n  let str = \"\";\n\n  for (var thisRomanNumeral in romanNumerals ) {\n    let thisRomanNumeralNumber = romanNumerals[thisRomanNumeral];\n    let numDivisible = Math.floor(num / thisRomanNumeralNumber);\n    num -= numDivisible * thisRomanNumeralNumber;\n    for(let i = 0; i < numDivisible; i++) {\n      str += thisRomanNumeral;\n    }\n  }\n  return str;\n}\n\nfunction convertFromRoman(str) {\n  let result = 0;\n  for(var thisRomanNumeral in romanNumerals) {\n    let thisRomanNumeralNumber = romanNumerals[thisRomanNumeral];\n    while(str.indexOf(thisRomanNumeral) === 0) {\n      result += thisRomanNumeralNumber;\n      str = str.replace(thisRomanNumeral, '');\n    }\n  }\n  return result;\n}\n\nfunction romanNumeralMultiplier (numeral) {\n  const numberRepresentation = convertFromRoman(numeral);\n  const numberResult = numberRepresentation * 3;\n  return convertToRoman(numberResult);\n}\n\nconsole.log(romanNumeralMultiplier(\"IV\"))\n\nfunction tribonacci(number, memo){\n  memo = memo || {}\n  if(memo[number])\n    return memo[number]\n  if(number === 1 || number === 2)\n    return 1\n  if(number === 3)\n    return 2\n  return memo[number] = tribonacci(number-1, memo) + tribonacci(number-2, memo) + tribonacci(number-3, memo)\n}\nconsole.log(tribonacci(12))\n//countand say\nfunction countAndSay(n) {\n\tif (n <= 0)\n\t        return null;\n\n\t    var result = \"1\";\n\t    var i = 1;\n\n\t    while (i < n) {\n\t        var sb = '';\n\t        var count = 1;\n\t        for (var j = 1; j < result.length; j++) {\n\t            if (result.charAt(j) == result.charAt(j - 1)) {\n\t                count++;\n\t            } else {\n\t                sb += count;\n\t                sb += result.charAt(j - 1);\n\t                count = 1;\n\t            }\n\t        }\n\n\t        sb += count;\n\t        sb += result.charAt(result.length - 1);\n\t        result = sb;\n\t        i++;\n\t    }\n\n\t    return result;\n}\n\nconsole.log('Count and Say', countAndSay(4))\n\n//calculator\nlet calculator = new Calculator().fromString('7*2+2/8')\nconsole.log('Calculator', calculator.value)\n\n\nvar body = document.body,\n    button = document.querySelector('.handle'),\n    animateTime = 900;\n\nfunction getPageScroll() {\n  var yScroll;\n\n  if (window.pageYOffset) {\n    yScroll = window.pageYOffset;\n  } else if (document.documentElement && document.documentElement.scrollTop) {\n    yScroll = document.documentElement.scrollTop;\n  } else if (document.body) {\n    yScroll = document.body.scrollTop;\n  }\n  return yScroll;\n}\n\n// button.addEventListener('click', function (event) {\n//   let targetOffset, currentPosition\n//   debugger;\n//   targetOffset = document.getElementById(event.target.hash.substr(1)).offsetTop;\n//   currentPosition = getPageScroll();\n//\n//   body.classList.add('in-transition');\n//   // window.scrollTo(0, targetOffset);\n//   body.style.WebkitTransform = \"translate(0, -\" + (targetOffset - currentPosition) + \"px)\";\n//   body.style.MozTransform = \"translate(0, -\" + (targetOffset - currentPosition) + \"px)\";\n//   body.style.transform = \"translate(0, -\" + (targetOffset - currentPosition) + \"px)\";\n//\n//   window.setTimeout(function () {\n//     body.style.WebkitTransform = \"none\"\n//     // body.classList.remove('in-transition');\n//     // body.style.cssText = \"\";\n//     // console.log(window)\n//     window.scrollTo(0, targetOffset);\n//   }, animateTime);\n//\n//   event.preventDefault();\n//\n// }, false);\n\n\nconst cpalindrome = (number) => {\n  if(x === 0 || x === 1) return true\n  if(x < 0) return false\n  let value = 1\n  while(number/value > 10){\n    value = value*10\n  }\n  while(number > 0){\n    if(Math.floor(number/value) === number%10){\n      number = Math.floor((number%value)/10)\n      value = Math.floor(value/100)\n    } else {\n      return false\n    }\n  }\n  return true\n}\nconsole.log(cpalindrome(12321))\n\nconst camelize = (str) => {\n  let words = str.split('-')\n  words.map((word, index) => {\n    index === 0 ? word : word[0].toUpperCase() + word.slice(1)\n  }).join('')\n}\n\nconst filterRangeInPlace = (arr, start, end) => {\n  arr.filter( item => (item >=start && item <= end))\n}\n\n// users.map( user => ({\n//   id: user.id,\n//   fullname: `${user.firstname} ${user.lastname}`\n// }))\nlet john = { name: \"John\", age: 25 }\nlet pete = { name: \"Pete\", age: 30 }\nlet mary = { name: \"Mary\", age: 29 }\n\nlet arr23 = [ john, pete, mary ];\n\n// const findAverage = (arr) => {\n//   arr.reduce((acc, curr) => acc + curr.age)/arr.length\n// }\n\nlet range = {\n  from: 1,\n  to: 5,\n  [Symbol.iterator]: function(){\n    return{\n      current: this.from,\n      last: this.to,\n      next(){\n        if(this.current <= this.last){\n          return {done: false, value: this.current++}\n        } else {\n          return {done: true}\n        }\n      }\n    }\n  }\n};\n\nfor(let num of range){\n  console.log(num)\n}\n\nconst uniqueArr = (arr) => {\n  return [...new Set(arr)]\n}\n\nconst anangrams = (arr) => {\n  let map = new Map()\n  arr.forEach(word => {\n    let sorted = word.toLowerCase().split('').sort().join('')\n    map.set(sorted, word)\n  })\n  return Array.from(map.values())\n}\n\nlet company = { // the same object, compressed for brevity\n  sales: [{name: 'John', salary: 1000}, {name: 'Alice', salary: 600 }],\n  development: {\n    sites: [{name: 'Peter', salary: 2000}, {name: 'Alex', salary: 1800 }],\n    internals: [{name: 'Jack', salary: 1300}]\n  }\n};\n\n// The function to do the job\nfunction sumSalaries(department) {\n  if (Array.isArray(department)) { // case (1)\n    return department.reduce((prev, current) => prev + current.salary, 0); // sum the array\n  } else { // case (2)\n    let sum = 0;\n    for(let subdep of Object.values(department)) {\n      sum += sumSalaries(subdep); // recursively call for subdepartments, sum the results\n    }\n    return sum;\n  }\n}\n\nconsole.log('Salaries', sumSalaries(company));\n\n\nfunction sumTo(n){\n  if(n === 1) return 1\n  return n + sumTo(n-1)\n}\n\n\nlet list = {\n  value: 1,\n  next: {\n    value: 2,\n    next: {\n      value: 3,\n      next: {\n        value: 4,\n        next: null\n      }\n    }\n  }\n};\n\nconst printList = (list) => {\n  while(list){\n    console.log(list.value)\n    list = list.next\n  }\n  // while(list.next){\n  //   printList(list.next)\n  // }\n}\nprintList(list)\n\n\nconst reverseList = (list) => {\n  while(list.next){\n    reverseList(list.next)\n  }\n  console.log(list.value)\n}\n\nconst reverseList2 = (list) => {\n  let arr = []\n  while(list){\n    arr.push(list.value)\n    list = list.next\n  }\n  return arr.reverse()\n}\nconsole.log(reverseList2(list))\n// /sum(1)(2) = 3\nconst summed = (n) => {\n  // let currSum = n\n  // let recurSum = (x) => {\n  //   currSum += x\n  //   return recurSum\n  // }\n  // recurSum.toString = () => return currSum\n  // return recurSum\n  // for two level\n  return function(x){\n    return n + x\n  }\n}\n\nconsole.log('Summed', summed(1)(2))\n\nconst inBetween = (args, ...filters) => {\n  let filt = args.filter(num => {\n    if(num >= filters[0] && num <= filters[1]){\n      return num\n    }\n  })\n  return filt\n}\n\nconsole.log(inBetween([1, 2, 3, 4, 5, 6, 7], 3, 5))\n\n//largestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]) should return [27,5,39,1001].\n\nconst largestOfFour = (arr) => {\n  return arr.map(values => {\n    if(Array.isArray(values)){\n      return Math.max(...values)\n    }\n  })\n\n}\nconsole.log(largestOfFour([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]))\n\nfunction ask(question, ...handlers) {\n  let isYes = confirm(question);\n\n  for(let handler of handlers) {\n    if (handler.length == 0) {\n      if (isYes) handler();\n    } else {\n      handler(isYes);\n    }\n  }\n\n}\n//ask(\"Question?\", () => alert('You said yes'), result => alert(result));\n\nlet count1 = new CounterC(10);\ncount1.increment()\ncount1.increment()\ncount1.increment()\ncount1.decrement()\nconsole.log('Counter value', count1.value)\ncount1.value = 15\ncount1.decrement()\nconsole.log('Counter value', count1.value)\n\n\nfunction printNumbers(from=1, to=100){\n  let timerId = setInterval(() => {\n        debugger;\n        console.log(from)\n        if(from === to){\n          clearInterval(timerId)\n        }\n        from++;\n  }, 1000)\n}\nprintNumbers()\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/sandbox.js\n// module id = 10\n// module chunks = 1","export class CounterC{\n  constructor(value = 0){\n    this._value = value\n    this.increment = this.increment.bind(this)\n  }\n  increment(){\n    this._value += 1\n  }\n  decrement(){\n    this._value -= 1\n  }\n  get value(){\n    return this._value\n  }\n  set value(val){\n    this._value = val\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/counter.js\n// module id = 13\n// module chunks = 1","export class Calculator {\n   constructor(initialValue) {\n     this.setValue = this.setValue.bind(this);\n     this.times = this.times.bind(this);\n     this.minus = this.minus.bind(this);\n     this.plus = this.plus.bind(this);\n     this.dividedBy = this.dividedBy.bind(this);\n     this.toString = this.toString.bind(this);\n     this.fromString = this.fromString.bind(this);\n\n     this.setValue(initialValue);\n   }\n   setValue(val) {\n     this.value = val;\n     this.string = '' + val;\n   }\n   times(val) {\n      this.value = this.value * val;\n      this.string += '*' + val;\n      return this;\n   }\n   minus(val) {\n      this.value -= val;\n      this.string += '-' + val;\n      return this;\n   }\n   plus(val) {\n      this.value += val;\n      this.string += '+' + val;\n      return this;\n   }\n   dividedBy(val) {\n      this.value = this.value / val;\n      this.string += '/' + val;\n      return this;\n   }\n   toString() {\n     return this.string;\n   }\n   fromString(str) {\n      let numbers = [0,1,2,3,4,5,6,7,8,9];\n      let operators = ['*', '-', '+', '/'];\n      let currentNumberString = '';\n      let currentOperatorChar = '';\n      let operatorHandlers = {\n        '*': this.times,\n        '-': this.minus,\n        '+': this.plus,\n        '/': this.dividedBy\n     }\n      str.split('').forEach((char) => {\n          if (numbers.indexOf(parseInt(char, 10)) !== -1) {\n            // store this as part of next number to be used\n            currentNumberString += char;\n          } else if (operators.indexOf(char) !== -1) {\n            // found the next operator\n            if (!this.value) {\n               // store intial value for operator to be used against if it isn't set\n               this.setValue(parseInt(currentNumberString, 10));\n            } else {\n               // use the last operator, then store this one\n               operatorHandlers[currentOperatorChar](parseInt(currentNumberString, 10))\n            }\n            currentNumberString = '';\n            currentOperatorChar = char;\n\n          }\n      });\n      // do the last operator and number\n      operatorHandlers[currentOperatorChar](parseInt(currentNumberString, 10));\n      return this;\n   }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/calculator.js\n// module id = 2\n// module chunks = 1"],"sourceRoot":""}